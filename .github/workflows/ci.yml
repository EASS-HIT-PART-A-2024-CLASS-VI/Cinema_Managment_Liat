name: Cinema Management System CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock
        
        # Install frontend dependencies
        if [ -f app/frontend/requirements.txt ]; then pip install -r app/frontend/requirements.txt; fi
        
        # Install backend dependencies
        if [ -f app/backend/app/requirements.txt ]; then pip install -r app/backend/app/requirements.txt; fi
        
        # Install LLM service dependencies
        if [ -f app/backend/llm_service/requirements.txt ]; then pip install -r app/backend/llm_service/requirements.txt; fi
    
    - name: Install frontend package in development mode
      run: |
        cd app/frontend
        pip install -e .
    
    - name: Run Frontend Tests
      run: |
        cd app/frontend
        pytest tests/ -v
    
    - name: Run Backend Tests
      run: |
        cd app/backend/app
        pytest tests/ -v
    
    - name: Run Integration Tests
      run: |
        cd app
        pytest tests/ -v
    
    # Removing Docker build step temporarily as it may require Docker setup
    # - name: Build Docker images
    #   run: |
    #     cd app
    #     docker-compose build
      
    - name: Lint code
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics